
stages:
  - build
  - deploy

variables:
  AWS_DEFAULT_REGION: "us-west-2"
  AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
  AWS_SECRET_ACCESS_KEY: "$AWS_SECRET_ACCESS_KEY"
  S3_BUCKET: "my-logs-app-bucket"
  TAG: "v2"

build:
  stage: build
  when: manual
  image: 
    name: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - docker build -f kubernetes/Dockerfile -t $CI_REGISTRY_USER/hello-word-app:$TAG .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker push $CI_REGISTRY_USER/hello-word-app:$TAG

deploy:
  stage: deploy
  when: manual
  before_script:
    - apt-get update && apt-get install -y apt-transport-https ca-certificates curl lsb-release
    - curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor --yes -o /usr/share/keyrings/docker-archive-keyring.gpg
    - echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    - apt-get update && apt-get install -y docker-ce docker-ce-cli containerd.io
    - usermod -aG docker $(whoami)
    - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
    - apt-get update
    - apt-get install -y kubectl
    - apt-get install -y awscli 
    
  script: 
    - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name sandra-eks
    - kubectl apply -f kubernetes/deployment.yaml
    - kubectl apply -f kubernetes/service.yaml
    - kubectl apply -f kubernetes/network.yaml
    - kubectl logs deployment/hello-world-deployment > application_logs.txt
    - aws s3 cp application_logs.txt s3://$S3_BUCKET/
